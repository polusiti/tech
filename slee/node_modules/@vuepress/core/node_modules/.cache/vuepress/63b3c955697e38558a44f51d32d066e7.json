{"remainingRequest":"/home/higuc/polusiti-tech/slee/node_modules/babel-loader/lib/index.js??ref--3-1!/home/higuc/polusiti-tech/slee/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/higuc/polusiti-tech/slee/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/higuc/polusiti-tech/slee/docs/.vuepress/components/IndexBigImg.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/higuc/polusiti-tech/slee/docs/.vuepress/components/IndexBigImg.vue","mtime":1761321001137},{"path":"/home/higuc/polusiti-tech/slee/node_modules/cache-loader/dist/cjs.js","mtime":1761329323494},{"path":"/home/higuc/polusiti-tech/slee/node_modules/babel-loader/lib/index.js","mtime":1761329323866},{"path":"/home/higuc/polusiti-tech/slee/node_modules/cache-loader/dist/cjs.js","mtime":1761329323494},{"path":"/home/higuc/polusiti-tech/slee/node_modules/vue-loader/lib/index.js","mtime":1761329324398}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}